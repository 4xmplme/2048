{"mappings":"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","sources":["<anon>","src/scripts/index.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$export$2e2bcd8739ae039 = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.score = 0;\n        this.status = \"idle\"; // One of: 'idle', 'playing', 'win', 'lose'\n        this.board = initialState || [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"_spawnNewTile\",\n            value: function _spawnNewTile() {\n                var zeroPos = [];\n                for(var row = 0; row < this.board.length; row++){\n                    for(var col = 0; col < this.board[row].length; col++)if (this.board[row][col] === 0) zeroPos.push({\n                        rowIndex: row,\n                        colIndex: col\n                    });\n                }\n                if (zeroPos.length === 0) return;\n                var randomIndex = Math.floor(Math.random() * zeroPos.length);\n                var randomCell = zeroPos[randomIndex];\n                var startValue = Math.random() < 0.1 ? 4 : 2;\n                this.board[randomCell.rowIndex][randomCell.colIndex] = startValue;\n            }\n        },\n        {\n            key: \"_processRow\",\n            value: function _processRow(row) {\n                var slidRow = row.filter(function(cell) {\n                    return cell !== 0;\n                });\n                var mergedRow = [];\n                for(var i = 0; i < slidRow.length; i++)if (i + 1 < slidRow.length && slidRow[i] === slidRow[i + 1]) {\n                    var mergedValue = slidRow[i] * 2;\n                    if (mergedValue === 2048) this.status = \"win\";\n                    mergedRow.push(mergedValue);\n                    this.score += mergedValue;\n                    i++;\n                } else mergedRow.push(slidRow[i]);\n                while(mergedRow.length < 4)mergedRow.push(0);\n                return mergedRow;\n            }\n        },\n        {\n            key: \"_transposeBoard\",\n            value: function _transposeBoard() {\n                var newBoard = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                for(var i = 0; i < newBoard.length; i++)for(var j = 0; j < newBoard[i].length; j++)newBoard[j][i] = this.board[i][j];\n                return newBoard;\n            }\n        },\n        {\n            key: \"_checkForGameOver\",\n            value: function _checkForGameOver() {\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n                    if (this.board[i][j] === 0) return;\n                    if (i < 3 && this.board[i][j] === this.board[i + 1][j]) return;\n                    if (j < 3 && this.board[i][j] === this.board[i][j + 1]) return;\n                }\n                this.status = \"lose\";\n            }\n        },\n        {\n            key: \"move\",\n            value: function move(direction) {\n                var _this = this;\n                if (this.status === \"game over\") return false;\n                var oldBoard = JSON.stringify(this.board);\n                switch(direction){\n                    case \"Up\":\n                        this.board = this._transposeBoard();\n                        this.board = this.board.map(function(row) {\n                            return _this._processRow(row);\n                        });\n                        this.board = this._transposeBoard();\n                        break;\n                    case \"Down\":\n                        this.board = this._transposeBoard();\n                        this.board = this.board.map(function(row) {\n                            return _this._processRow((0, $227c6742e0ff6f82$export$71511d61b312f219)(row).reverse()).reverse();\n                        });\n                        this.board = this._transposeBoard();\n                        break;\n                    case \"Left\":\n                        this.board = this.board.map(function(row) {\n                            return _this._processRow(row);\n                        });\n                        break;\n                    case \"Right\":\n                        this.board = this.board.map(function(row) {\n                            return _this._processRow((0, $227c6742e0ff6f82$export$71511d61b312f219)(row).reverse()).reverse();\n                        });\n                        break;\n                }\n                var moved = JSON.stringify(this.board) !== oldBoard;\n                if (moved) {\n                    this._spawnNewTile();\n                    this._checkForGameOver();\n                }\n                return moved;\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.restart();\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.score = 0;\n                this.status = \"playing\";\n                this.board = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this._spawnNewTile();\n                this._spawnNewTile();\n            }\n        }\n    ]);\n    return Game;\n}();\n\n\n\"use strict\";\nvar $ea94b51faa2ec44b$var$game = new (0, $3d28d7f1aac198f5$export$2e2bcd8739ae039)();\nvar $ea94b51faa2ec44b$var$scoreElement = document.querySelector(\".game-score\");\nvar $ea94b51faa2ec44b$var$button = document.querySelector(\".button\");\nvar $ea94b51faa2ec44b$var$tableBody = document.querySelector(\"tbody\");\nvar $ea94b51faa2ec44b$var$startMessage = document.querySelector(\".message-start\");\nvar $ea94b51faa2ec44b$var$winMessage = document.querySelector(\".message-win\");\nvar $ea94b51faa2ec44b$var$loseMessage = document.querySelector(\".message-lose\");\nvar $ea94b51faa2ec44b$var$render = function() {\n    var board = $ea94b51faa2ec44b$var$game.getState();\n    var score = $ea94b51faa2ec44b$var$game.getScore();\n    var rows = $ea94b51faa2ec44b$var$tableBody.querySelectorAll(\"tr\");\n    $ea94b51faa2ec44b$var$scoreElement.textContent = score;\n    rows.forEach(function(row, rowIndex) {\n        row.querySelectorAll(\"td\").forEach(function(cell, colIndex) {\n            var value = board[rowIndex][colIndex];\n            cell.textContent = value === 0 ? \"\" : value;\n            cell.className = \"field-cell field-cell--\".concat(value);\n        });\n    });\n};\nvar $ea94b51faa2ec44b$var$updateUi = function() {\n    var gameStatus = $ea94b51faa2ec44b$var$game.getStatus();\n    $ea94b51faa2ec44b$var$startMessage.classList.toggle(\"hidden\", gameStatus !== \"idle\");\n    $ea94b51faa2ec44b$var$winMessage.classList.toggle(\"hidden\", gameStatus !== \"win\");\n    $ea94b51faa2ec44b$var$loseMessage.classList.toggle(\"hidden\", gameStatus !== \"lose\");\n    if (gameStatus === \"playing\") {\n        $ea94b51faa2ec44b$var$button.textContent = \"Restart\";\n        $ea94b51faa2ec44b$var$button.className = \"button restart\";\n    }\n};\nvar $ea94b51faa2ec44b$var$handleMove = function(direction) {\n    if ($ea94b51faa2ec44b$var$game.getStatus() === \"lose\") return;\n    var moved = $ea94b51faa2ec44b$var$game.move(direction);\n    if (moved) {\n        $ea94b51faa2ec44b$var$render();\n        $ea94b51faa2ec44b$var$updateUi();\n    }\n};\n$ea94b51faa2ec44b$var$button.addEventListener(\"click\", function() {\n    $ea94b51faa2ec44b$var$game.start();\n    $ea94b51faa2ec44b$var$render();\n    $ea94b51faa2ec44b$var$updateUi();\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    var direction;\n    switch(e.key){\n        case \"ArrowUp\":\n            direction = \"Up\";\n            break;\n        case \"ArrowDown\":\n            direction = \"Down\";\n            break;\n        case \"ArrowLeft\":\n            direction = \"Left\";\n            break;\n        case \"ArrowRight\":\n            direction = \"Right\";\n            break;\n        default:\n            return;\n    }\n    e.preventDefault();\n    $ea94b51faa2ec44b$var$handleMove(direction);\n});\nvar $ea94b51faa2ec44b$var$continueButton = $ea94b51faa2ec44b$var$winMessage.querySelector(\".keep-playing\");\n$ea94b51faa2ec44b$var$continueButton.addEventListener(\"click\", function() {\n    $ea94b51faa2ec44b$var$game.continuePlaying();\n    $ea94b51faa2ec44b$var$winMessage.classList.add(\"hidden\");\n});\n// MOBILA\nvar $ea94b51faa2ec44b$var$touchStartX = 0;\nvar $ea94b51faa2ec44b$var$touchStartY = 0;\nvar $ea94b51faa2ec44b$var$gameTable = document.querySelector(\".game-field\");\n$ea94b51faa2ec44b$var$gameTable.addEventListener(\"touchstart\", function(e) {\n    e.preventDefault();\n    $ea94b51faa2ec44b$var$touchStartX = e.touches[0].clientX;\n    $ea94b51faa2ec44b$var$touchStartY = e.touches[0].clientY;\n}, {\n    passive: false\n});\n$ea94b51faa2ec44b$var$gameTable.addEventListener(\"touchend\", function(e) {\n    e.preventDefault();\n    var touchEndX = e.changedTouches[0].clientX;\n    var touchEndY = e.changedTouches[0].clientY;\n    $ea94b51faa2ec44b$var$handleSwipe(touchEndX, touchEndY);\n});\nfunction $ea94b51faa2ec44b$var$handleSwipe(endX, endY) {\n    var deltaX = endX - $ea94b51faa2ec44b$var$touchStartX;\n    var deltaY = endY - $ea94b51faa2ec44b$var$touchStartY;\n    var swipeThreshold = 50;\n    if (Math.abs(deltaX) > Math.abs(deltaY)) {\n        if (deltaX > swipeThreshold) $ea94b51faa2ec44b$var$handleMove(\"Right\");\n        else if (deltaX < -swipeThreshold) $ea94b51faa2ec44b$var$handleMove(\"Left\");\n    } else {\n        if (deltaY > swipeThreshold) $ea94b51faa2ec44b$var$handleMove(\"Down\");\n        else if (deltaY < -swipeThreshold) $ea94b51faa2ec44b$var$handleMove(\"Up\");\n    }\n}\n\n})();\n//# sourceMappingURL=2048.f3775a44.js.map\n","\"use strict\";\n\nimport Game from \"../modules/Game.class.js\";\n\nconst game = new Game();\n\nconst scoreElement = document.querySelector(\".game-score\");\nconst button = document.querySelector(\".button\");\nconst tableBody = document.querySelector(\"tbody\");\nconst startMessage = document.querySelector(\".message-start\");\nconst winMessage = document.querySelector(\".message-win\");\nconst loseMessage = document.querySelector(\".message-lose\");\n\nconst render = () => {\n  const board = game.getState();\n  const score = game.getScore();\n  const rows = tableBody.querySelectorAll(\"tr\");\n\n  scoreElement.textContent = score;\n\n  rows.forEach((row, rowIndex) => {\n    row.querySelectorAll(\"td\").forEach((cell, colIndex) => {\n      const value = board[rowIndex][colIndex];\n\n      cell.textContent = value === 0 ? \"\" : value;\n      cell.className = `field-cell field-cell--${value}`;\n    });\n  });\n};\n\nconst updateUi = () => {\n  const gameStatus = game.getStatus();\n\n  startMessage.classList.toggle(\"hidden\", gameStatus !== \"idle\");\n  winMessage.classList.toggle(\"hidden\", gameStatus !== \"win\");\n  loseMessage.classList.toggle(\"hidden\", gameStatus !== \"lose\");\n\n  if (gameStatus === \"playing\") {\n    button.textContent = \"Restart\";\n    button.className = \"button restart\";\n  }\n};\n\nconst handleMove = (direction) => {\n  if (game.getStatus() === \"lose\") {\n    return;\n  }\n\n  const moved = game.move(direction);\n\n  if (moved) {\n    render();\n    updateUi();\n  }\n};\n\nbutton.addEventListener(\"click\", () => {\n  game.start();\n  render();\n  updateUi();\n});\n\ndocument.addEventListener(\"keydown\", (e) => {\n  let direction;\n\n  switch (e.key) {\n    case \"ArrowUp\":\n      direction = \"Up\";\n      break;\n    case \"ArrowDown\":\n      direction = \"Down\";\n      break;\n    case \"ArrowLeft\":\n      direction = \"Left\";\n      break;\n    case \"ArrowRight\":\n      direction = \"Right\";\n      break;\n    default:\n      return;\n  }\n\n  e.preventDefault();\n\n  handleMove(direction);\n});\n\nconst continueButton = winMessage.querySelector(\".keep-playing\");\n\ncontinueButton.addEventListener(\"click\", () => {\n  game.continuePlaying();\n  winMessage.classList.add(\"hidden\");\n});\n\n// MOBILA\n\nlet touchStartX = 0;\nlet touchStartY = 0;\nconst gameTable = document.querySelector(\".game-field\");\n\ngameTable.addEventListener(\n  \"touchstart\",\n  (e) => {\n    e.preventDefault();\n    touchStartX = e.touches[0].clientX;\n    touchStartY = e.touches[0].clientY;\n  },\n  { passive: false },\n);\n\ngameTable.addEventListener(\"touchend\", (e) => {\n  e.preventDefault();\n\n  const touchEndX = e.changedTouches[0].clientX;\n  const touchEndY = e.changedTouches[0].clientY;\n\n  handleSwipe(touchEndX, touchEndY);\n});\n\nfunction handleSwipe(endX, endY) {\n  const deltaX = endX - touchStartX;\n  const deltaY = endY - touchStartY;\n  const swipeThreshold = 50;\n\n  if (Math.abs(deltaX) > Math.abs(deltaY)) {\n    if (deltaX > swipeThreshold) {\n      handleMove(\"Right\");\n    } else if (deltaX < -swipeThreshold) {\n      handleMove(\"Left\");\n    }\n  } else {\n    if (deltaY > swipeThreshold) {\n      handleMove(\"Down\");\n    } else if (deltaY < -swipeThreshold) {\n      handleMove(\"Up\");\n    }\n  }\n}\n","\"use strict\";\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nexport default class Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(initialState) {\n    this.score = 0;\n    this.status = \"idle\"; // One of: 'idle', 'playing', 'win', 'lose'\n\n    this.board = initialState || [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n  }\n\n  _spawnNewTile() {\n    const zeroPos = [];\n\n    for (let row = 0; row < this.board.length; row++) {\n      for (let col = 0; col < this.board[row].length; col++) {\n        if (this.board[row][col] === 0) {\n          zeroPos.push({ rowIndex: row, colIndex: col });\n        }\n      }\n    }\n\n    if (zeroPos.length === 0) {\n      return;\n    }\n\n    const randomIndex = Math.floor(Math.random() * zeroPos.length);\n\n    const randomCell = zeroPos[randomIndex];\n    const startValue = Math.random() < 0.1 ? 4 : 2;\n\n    this.board[randomCell.rowIndex][randomCell.colIndex] = startValue;\n  }\n\n  _processRow(row) {\n    const slidRow = row.filter((cell) => cell !== 0);\n    const mergedRow = [];\n\n    for (let i = 0; i < slidRow.length; i++) {\n      if (i + 1 < slidRow.length && slidRow[i] === slidRow[i + 1]) {\n        const mergedValue = slidRow[i] * 2;\n\n        if (mergedValue === 2048) {\n          this.status = \"win\";\n        }\n\n        mergedRow.push(mergedValue);\n        this.score += mergedValue;\n\n        i++;\n      } else {\n        mergedRow.push(slidRow[i]);\n      }\n    }\n\n    while (mergedRow.length < 4) {\n      mergedRow.push(0);\n    }\n\n    return mergedRow;\n  }\n\n  _transposeBoard() {\n    const newBoard = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    for (let i = 0; i < newBoard.length; i++) {\n      for (let j = 0; j < newBoard[i].length; j++) {\n        newBoard[j][i] = this.board[i][j];\n      }\n    }\n\n    return newBoard;\n  }\n\n  _checkForGameOver() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.board[i][j] === 0) {\n          return;\n        }\n\n        if (i < 3 && this.board[i][j] === this.board[i + 1][j]) {\n          return;\n        }\n\n        if (j < 3 && this.board[i][j] === this.board[i][j + 1]) {\n          return;\n        }\n      }\n    }\n    this.status = \"lose\";\n  }\n\n  move(direction) {\n    if (this.status === \"game over\") {\n      return false;\n    }\n\n    const oldBoard = JSON.stringify(this.board);\n\n    switch (direction) {\n      case \"Up\":\n        this.board = this._transposeBoard();\n        this.board = this.board.map((row) => this._processRow(row));\n        this.board = this._transposeBoard();\n        break;\n      case \"Down\":\n        this.board = this._transposeBoard();\n\n        this.board = this.board.map((row) => {\n          return this._processRow([...row].reverse()).reverse();\n        });\n\n        this.board = this._transposeBoard();\n        break;\n      case \"Left\":\n        this.board = this.board.map((row) => this._processRow(row));\n        break;\n      case \"Right\":\n        this.board = this.board.map((row) => {\n          return this._processRow([...row].reverse()).reverse();\n        });\n        break;\n    }\n\n    const moved = JSON.stringify(this.board) !== oldBoard;\n\n    if (moved) {\n      this._spawnNewTile();\n      this._checkForGameOver();\n    }\n\n    return moved;\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.board;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.restart();\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.score = 0;\n    this.status = \"playing\";\n\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    this._spawnNewTile();\n    this._spawnNewTile();\n  }\n}\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","name","test","TypeError","$ea94b51faa2ec44b$var$game","protoProps","Game","initialState","instance","score","status","board","key","value","zeroPos","row","col","push","rowIndex","colIndex","randomIndex","Math","floor","random","randomCell","startValue","slidRow","filter","cell","mergedRow","mergedValue","newBoard","j","direction","_this","oldBoard","JSON","stringify","_transposeBoard","map","_processRow","reverse","moved","_spawnNewTile","_checkForGameOver","restart","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","$ea94b51faa2ec44b$var$scoreElement","document","querySelector","$ea94b51faa2ec44b$var$button","$ea94b51faa2ec44b$var$tableBody","$ea94b51faa2ec44b$var$startMessage","$ea94b51faa2ec44b$var$winMessage","$ea94b51faa2ec44b$var$loseMessage","$ea94b51faa2ec44b$var$render","getState","getScore","rows","querySelectorAll","textContent","forEach","className","concat","$ea94b51faa2ec44b$var$updateUi","gameStatus","getStatus","classList","toggle","$ea94b51faa2ec44b$var$handleMove","move","addEventListener","start","e","preventDefault","$ea94b51faa2ec44b$var$continueButton","continuePlaying","add","$ea94b51faa2ec44b$var$touchStartX","$ea94b51faa2ec44b$var$touchStartY","$ea94b51faa2ec44b$var$gameTable","touches","clientX","clientY","passive","endX","endY","deltaX","deltaY","changedTouches","abs"],"version":3,"file":"2048.f3775a44.js.map"}